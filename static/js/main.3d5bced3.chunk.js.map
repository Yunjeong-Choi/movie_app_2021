{"version":3,"sources":["Movie.js","MovieApp.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","style","display","marginRight","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA0CeA,MAjCf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAGrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAGR,aAFA,CAEA,OAAKC,MAAO,CAACC,QAAS,eAAgBC,YAAa,OAAoBR,UAAU,eAAjF,SAAiGI,GAAjCC,QAGxE,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQY,MAAM,EAAE,KAA9C,gBCmCDC,G,kNAtDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAWZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASb,UAAU,YAAnB,SACGY,EACI,qBAAKZ,UAAU,SAAf,SACG,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACKa,EAAOV,KAAI,SAACkB,GACT,OACI,cAAC,EAAD,CAEAC,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,QANTsB,EAAMC,e,GArCjBE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d5bced3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\"\n\nconst img = (props) => {\n    const { src, alt, title} = props; \n    return React.cloneElement('img', { src, alt, title });\n}\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            {/* 객체변환에 오류가 있을 수 있으니 스트링도 모두 중괄호 안에 넣는다. */}\n            {/* props 객체로 어떻게 변환이 되는지 몰라서 이해가 안댐 */}\n            <div className=\"movie_data\">\n                <h3 className=\"movie_title\">{title}</h3>\n                <h5 className=\"movie_year\">{year}</h5>\n                <h5 className=\"movie_genres\">\n                    {genres.map((genre, index) => (\n                        //{genre} \n                        //TODO: 줄바꿈을 하지 않고 열거하는데 중간에 공백이 있도록 하려면?\n                        <div style={{display: 'inline-block', marginRight: '3px'}} key={index} className=\"genres_genre\">{genre}</div>\n                    ))}\n                </h5>\n                <p className=\"movie_summary\">{summary.slice(0,140)}...</p>\n                {/* 속성값으로 스타일을 지정할 수 있음. style={{js위의 css}} */}\n                {/* 하지만 이보다는 css파일을 따로 만드는 것 추천 */}\n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,    \n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./MovieApp.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  //모든 state를 처음부터 선언하고 시작할 필요는 없다.\n  //선언되지 않은 state도 사용할 수 있음\n  //다만 처음에 선언 해두는 것이 추후 확장성에 좋음.\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading\n          ? (<div className=\"loader\">\n                <span className=\"loader_text\">Loading...</span>\n            </div>\n            ) : (\n            <div className=\"movies\">\n                {movies.map((movie) => {\n                    return (\n                        <Movie\n                        key={movie.id}\n                        id={movie.id}\n                        year={movie.year}\n                        title={movie.title}\n                        summary={movie.summary}\n                        poster={movie.medium_cover_image}\n                        genres={movie.genres}\n                        />\n                    );\n                })}\n            </div>\n            )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './MovieApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}